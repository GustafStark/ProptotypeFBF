#pragma checksum "C:\Users\gstark\source\repos\WebApplication1\WebApplication1\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "474566c9fa105d875d7ac204b04b2db134fd4092"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\gstark\source\repos\WebApplication1\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1;

#line default
#line hidden
#line 2 "C:\Users\gstark\source\repos\WebApplication1\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"474566c9fa105d875d7ac204b04b2db134fd4092", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"729efaa87342638aecfe1a972ce9f9f8dff55b4c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\gstark\source\repos\WebApplication1\WebApplication1\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 4477, true);
            WriteLiteral(@"<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 400px;
        width: 100%;
    }
</style>

<div class=""row"">
    <div id=""map""></div>
    <script>
        var map;
        var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
        var labelIndex = 0;
        var myLatLng = { lat: -34.397, lng: 150.644 };
        var iconBase = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/';

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                //center: { lat: -34.397, lng: 150.644 },
                center: myLatLng,
                zoom: 8,
                icon: iconBase + 'info-i_maps.png',
                disableDefaultUI: true

            });
            var marker = new google.maps.Marker({
                position: myLatLng,
                map: map,
                icon: iconBase + 'info-i_map");
            WriteLiteral(@"s.png',
                animation: google.maps.Animation.DROP,
                title: 'Hello World!'
            });
            google.maps.event.addListener(map, 'click', function (event) {
                addMarker(event.latLng, map);
            });
        }
        function toggleBounce() {
            if (marker.getAnimation() !== null) {
                marker.setAnimation(null);
            } else {
                marker.setAnimation(google.maps.Animation.BOUNCE);
            }
        }
        function addMarker(location, map) {
            // Add the marker at the clicked location, and add the next-available label
            // from the array of alphabetical characters.
            var marker = new google.maps.Marker({
                position: location,
                label: labels[labelIndex++ % labels.length],
                map: map,
                icon: iconBase + 'info-i_maps.png'
            });
        }
                                    //google.maps.event.");
            WriteLiteral(@"addDomListener(window, 'load', initialize);

    </script>
    <script src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyA2GeVTZoPA15uCWcVcQ_F5oksl2nL46UQ&callback=initMap""
            async defer></script>
    <script>
                                    //// In the following example, markers appear when the user clicks on the map.
                                    //// Each marker is labeled with a single alphabetical character.
                                    //var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
                                    //var labelIndex = 0;

                                    //function initialize() {
                                    //    var bangalore = { lat: -34.397, lng: 150.644 };
                                    //    var map = new google.maps.Map(document.getElementById('map'), {
                                    //        zoom: 12,
                                    //        center: bangalore
                                    //    });
");
            WriteLiteral(@"
                                    //    // This event listener calls addMarker() when the map is clicked.
                                    //    google.maps.event.addListener(map, 'click', function (event) {
                                    //        addMarker(event.latLng, map);
                                    //    });

                                    //    // Add a marker at the center of the map.
                                    //    addMarker(bangalore, map);
                                    //}

                                    //// Adds a marker to the map.
                                    //function addMarker(location, map) {
                                    //    // Add the marker at the clicked location, and add the next-available label
                                    //    // from the array of alphabetical characters.
                                    //    var marker = new google.maps.Marker({
                                    //        positi");
            WriteLiteral(@"on: location,
                                    //        label: labels[labelIndex++ % labels.length],
                                    //        map: map
                                    //    });
                                    //}

                                    //google.maps.event.addDomListener(window, 'load', initialize);
    </script>

</div>

");
            EndContext();
            BeginContext(4526, 17, true);
            WriteLiteral("    <p>\r\n        ");
            EndContext();
            BeginContext(4544, 24, false);
#line 104 "C:\Users\gstark\source\repos\WebApplication1\WebApplication1\Views\Home\Index.cshtml"
   Write(ViewBag.WhatImLookingFor);

#line default
#line hidden
            EndContext();
            BeginContext(4568, 12, true);
            WriteLiteral("\r\n    </p>\r\n");
            EndContext();
            BeginContext(4584, 30, false);
#line 107 "C:\Users\gstark\source\repos\WebApplication1\WebApplication1\Views\Home\Index.cshtml"
Write(Html.Raw((String)ViewBag.Data));

#line default
#line hidden
            EndContext();
            BeginContext(4614, 68, true);
            WriteLiteral("\r\n\r\n\r\n\r\ncollection_rank\r\n\r\ncollection_objectname\r\nresults_objectname");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
